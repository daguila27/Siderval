
                        </div>
                    </div>
            </div>


<style type="text/css">
     /* The snackbar - position it at the bottom and in the middle of the screen */
#snackbar {
    visibility: hidden; /* Hidden by default. Visible on click */
    min-width: 250px; /* Set a default minimum width */
    margin-left: -125px; /* Divide value of min-width by 2 */
    background-color: #333; /* Black background color */
    color: #fff; /* White text color */
    text-align: center; /* Centered text */
    border-radius: 2px; /* Rounded borders */
    padding: 16px; /* Padding */
    position: fixed; /* Sit on top of the screen */
    z-index: 1; /* Add a z-index if needed */
    left: 50%; /* Center the snackbar */
    bottom: 30px; /* 30px from the bottom */
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
#snackbar.show {
    visibility: visible; /* Show the snackbar */

/* Add animation: Take 0.5 seconds to fade in and out the snackbar.
However, delay the fade out process for 2.5 seconds */
    -webkit-animation: fadein 0.5s, fadeout 0.5s 10s;
    animation: fadein 0.5s, fadeout 0.5s 29.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}

@keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
}

@-webkit-keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
}

@keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
} 
</style>





    <!-- jQuery -->
    <script src="/vendor/jquery/jquery.min.js"></script>

    <!-- Bootstrap Core JavaScript -->
    <script src="/vendor/bootstrap/js/bootstrap.min.js"></script>

    <!-- Metis Menu Plugin JavaScript -->
    <script src="/vendor/metisMenu/metisMenu.min.js"></script>
    <!-- Jquery para dejar objetos en modo 'cargando' -->
    <link href="/assets/css/loading.css" rel="stylesheet">
    <script src="/js/loading.js"></script>

    <!-- DataTables JavaScript -->
    <script src="/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="/vendor/datatables-plugins/dataTables.bootstrap.min.js"></script>
    <script src="/vendor/datatables-responsive/dataTables.responsive.js"></script>

    <!-- Morris Charts JavaScript -->
    <script src="/vendor/raphael/raphael.min.js"></script>
    <script src="/vendor/morrisjs/morris.min.js"></script>
    <script src="/data/morris-data.js"></script>
    <!-- DataTables JavaScript -->
    <script src="/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="/vendor/datatables-plugins/dataTables.bootstrap.min.js"></script>
    <script src="/vendor/datatables-responsive/dataTables.responsive.js"></script>

    <!-- Custom Theme JavaScript -->
    <script src="/dist/js/sb-admin-2.js"></script>
    <script src="/js/bootstrap-tagsinput.js"></script>
    <script src="/js/bootstrap-tagsinput-angular.js"></script>

    <script src="/vendor/jquery/jquery.twbsPagination.js" type="text/javascript"></script>


    <!-- Modal crear Factura -->
    <div id="facturaModal" class="modal fade bs-example-modal-lg" role="dialog">
      <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <form id="factura-form">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Orden de Compra #<b class="numFac"></b></h4>
              </div>
              <div class="modal-body table-factura">
                
              </div>
              <div class="modal-footer"> 
                <button type="submit" class="btn btn-primary">Confirmar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
              </div>
            </div>
        </form>

      </div>
    </div>


    <!-- Modal Seleccionar Centro de Costo-->
    <div id="ccModal" class="modal fade" role="dialog">
        <input type="hidden" id="auxCC">
      <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Selecionar Centro de Costo:</h4>
          </div>
          <div class="modal-body">
            <div class="form-group">
              <label for="subcuentasModal"></label>
              <select class="form-control" id="subcuentasModal" onchange="foundSC(this)">
                <%for(var e=0; e < subc.length; e++){%>
                    <option value="<%= subc[e].cuenta%>-<%= subc[e].detalle.substring(0,1).toUpperCase() +subc[e].detalle.substring(1, subc[e].detalle.length).toLowerCase() %>"><%= subc[e].detalle%></option>
                <%}%>
              </select>
            </div>
            <div class="form-group SCModal" style="display: none;">
              <label for="SCModal">Selecccione subcuenta: </label>
              <select class="form-control" id="SCModal">
               
              </select>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="finSelectCC()">Seleccionar</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
          </div>
        </div>

      </div>
    </div>
    <!-- Modal Recepcionar OCA -->
    <div id="receivedModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <form id="rec_form">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <p>Some text in the modal.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </form>
            </div>

        </div>
    </div>

    <!-- Modal Factura0 -->
    <div class="modal fade" id="myModalInformation" tabindex="-1" role="dialog">
        <!-- La informacion de este modal es cargada con modal-factura.ejs. -->
    </div><!-- /.modal -->






<div class="footer-hidden"></div>





     <!-- Use a button to open the snackbar -->
   <!-- <button onclick="showToast()">Show Snackbar</button>-->

    <!-- The actual snackbar -->
    <div id="snackbar" data-newid="0" onclick="clickSnackbar(this)" style="cursor: pointer;">Se ha creado una nueva OF. <button class="btn btn-success">RECARGAR</button></div>
        </body>



<script type="text/javascript">

    function modal_fact(label) {
        $.ajax({
            type: 'GET',
            url: '/abastecimiento/get_factura/'+$(label).data('idfactura'),
            success: function(data) {
                $('#myModalInformation').html(data);
                $('#myModalInformation').modal('toggle');
            }
        });
    }

    function modal_guia(label) {
        $.ajax({
            type: 'GET',
            url: '/abastecimiento/get_guiaAbast/'+$(label).data('idgd'),
            success: function(data) {
                $('#myModalInformation').html(data);
                $('#myModalInformation').modal('toggle');
            }
        });
    }


    function setDataTable(str){
        return $(str).DataTable({
            responsive: true,
            lengthChange: false,
            language: {
                    "sProcessing":     "Procesando...",
                    "sZeroRecords":    "No se encontraron resultados",
                    "sEmptyTable":     "Ningún dato disponible en esta tabla",
                    "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix":    "",
                    "sSearch":         "Buscar:",
                    "sUrl":            "",
                    "sInfoThousands":  ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst":    "Primero",
                        "sLast":     "Último",
                        "sNext":     "&raquo",
                        "sPrevious": "&laquo"
                    },
                    "oAria": {
                        "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
        });
    }

    function setDataTable2(str){
        return $(str).DataTable({
            responsive: true,
            lengthChange: false,
            pageLength: 20,
            language: {
                "sProcessing":     "Procesando...",
                "sZeroRecords":    "No se encontraron resultados",
                "sEmptyTable":     "Ningún dato disponible en esta tabla",
                "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",

                "sSearch":         "Buscar:",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst":    "Primero",
                    "sLast":     "Último",
                    "sNext":     "&raquo",
                    "sPrevious": "&laquo"
                },
                "oAria": {
                    "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });
    }
    function setDataTableMain(str){
        return $(str).DataTable({
            responsive: true,
            lengthChange: false,
            pageLength: 20,
            bFilter: false,
            bInfo: false,
            order: [],
            language: {
                "sProcessing":     "Procesando...",
                "sZeroRecords":    "No se encontraron resultados",
                "sEmptyTable":     "Ningún dato disponible en esta tabla",
                "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",

                "sSearch":         "Buscar:",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst":    "Primero",
                    "sLast":     "Último",
                    "sNext":     "&raquo",
                    "sPrevious": "&laquo"
                },
                "oAria": {
                    "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });
    }



    function setDataTableOF(str){
        return $(str).DataTable({
            responsive: true,
            lengthChange: false,
            pageLength: 20,
            bFilter: false,
            bInfo: false,
            order: [],
            language: {
                "sProcessing":     "Procesando...",
                "sZeroRecords":    "No se encontraron resultados",
                "sEmptyTable":     "Ningún dato disponible en esta tabla",
                "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",

                "sSearch":         "Buscar:",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst":    "Primero",
                    "sLast":     "Último",
                    "sNext":     "&raquo",
                    "sPrevious": "&laquo"
                },
                "oAria": {
                    "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });
    }

    function oda_data(yo){
        $.ajax({
            type: 'GET',
            url: '/abastecimiento/get_dataoda/'+$(yo).data('id'),
            success: function(data){
                $("#receivedModal div div form").html(data);
            }
        });
    }

    function gen_pdf(id){
        $("#vpdf_btn").attr('disabled',true);
        $('body').loading('toggle');
        $.ajax({
            type: 'get',
            url: '/abastecimiento/view_facturapdf/' + id,
            success: function(data){
                $("#vpdf_btn").attr('disabled',false);
                $("body").loading('toggle');
                window.open(data,'_blank')
            }
        })
    }
    function foundSC(yo){
        $.ajax({
            type: 'GET',
            url: '/abastecimiento/found_subcuentas/'+$(yo).val().split('-')[0],
            beforeSend: function(){
                    $(".SCModal").css('display', 'none');
            },
            success: function(data){
                if(data != 'notsc'){
                    $(".SCModal").css('display', 'block');
                    $("#SCModal").html(data);
                }
            }
        });

    }

    $("form#factura-form").on('submit', function(e){
        e.preventDefault();
        lista = $("#factura-form").serializeArray();
        var data = {
            'idoda': '',
            'numeroFactura': '',
            'idabast': [],
            'costo_unid': [],
            'cantidad': [],
            'moneda-factura': [],
            'complete': '',
            'comentario': '',
            'fecha-facturacion': ''
        };
        
        console.log(lista);
        for(var i =0; i < lista.length;i++){
            if(lista[i].name != 'numeroFactura' && lista[i].name != 'comentario' && lista[i].name != 'idoda' && lista[i].name != 'fecha-facturacion' && lista[i].name != 'complete'){
                data[lista[i].name].push(lista[i].value);
            }else{
                data[lista[i].name] = lista[i].value;
            }
        }
        data.complete = '';
        $("#factura-form input:checkbox").each(function(){
            if($(this).is(':checked')){
              data.complete += 'on@';
            }
            else{
              data.complete += 'off@';  
            }
        });
        data.complete = data.complete.substring(0, data.complete.length-1);
        if(confirm("¿Está seguro que desea crear la siguiente Factura?")){
            $.ajax({
              type: 'POST',
              data: data,
              url: '/abastecimiento/save_factura',
              success: function(data){
                  if(!data.err){
                      alert(data.msg);
                      $.ajax({
                          type: 'GET',
                          url: '/abastecimiento/page_oda/'+$('#factura_idoda').val(),
                          success: function(data){
                              $(".main-page").html(data);
                          }
                      });
                      $("#facturaModal").modal('toggle');
                  } else alert(data.msg);
              }
            });
        }
      });
   $.ajax({
       type: 'GET',
       url: '/abastecimiento/notif_abast',
       success: function(data){
           $(".notificaciones").html(data);
       }
   });

    function selectCCModal(yo){
     //alert($(yo).parent('td').children('input').val());
     $("#auxCC").val($(yo).parent('td').children('input').attr('id'));
     $("#SCModal").val(null);
  }
    function finSelectCCModal(){
        if( ($("#SCModal").val() != null || $("#SCModal").val() != '') || $(".SCModal").css('display') != 'none' ){
          $("#"+$("#auxCC").val()).val($("#subcuentasModal").val()+"-"+$("#SCModal").val().split('-')[1]);
          $("#"+$("#auxCC").val()).parent('td').children('a').html($("#SCModal").val());
        }
        else{
          $("#"+$("#auxCC").val()).val($("#subcuentasModal").val());
          $("#"+$("#auxCC").val()).parent('td').children('a').html($("#subcuentasModal").val());
        }
      }

     function finSelectCC(){
        if( $(".SCModal").css('display') != 'none'  ){
            $("#"+$("#auxCC").val()).val($("#subcuentasModal").val().split('-')[0]+"-"+$("#SCModal").val().split('-')[1]);
            $("#"+$("#auxCC").val()).parent('td').children('a').html($("#SCModal").val());
        }
        else{
            $("#"+$("#auxCC").val()).val($("#subcuentasModal").val().split('-')[0]);
            $("#"+$("#auxCC").val()).parent('td').children('a').html($("#subcuentasModal").val());
        }
     }
  function inNumero(){
        $.ajax({
                type: 'POST',
                data: {idoda: $("#modalIdOda").val(), numfac: $("#numeroFactura").val(), pdf: $("#pdffac").val()},
                url: '/abastecimiento/set_factura',
                success: function(data){
                    $(".page-container-recibidos").html(data);
                }
            });     
   }


   $.ajax({
            type: 'GET',
            url: '/abastecimiento/abast_myself',
            beforeSend: function(){
                $("#page-wrapper").css('display', 'none');
            },
            success: function(data){
                $("#page-wrapper").html(data);
                $("#page-wrapper").fadeIn();
            }
        });
    
    function ajax(yo){
        $(".active").removeClass('active');
        $(yo).addClass('active');
        $.ajax({
            type: 'GET',
            url: $(yo).data('link'), 
            beforeSend: function(){
                $("#page-wrapper").css('display', 'none');
            },
            success: function(data){
                $("#page-wrapper").html(data);
               	$("#page-wrapper").fadeIn();

            }
        });
    }
    function showForm(){
        var array = $("#odcForm").serializeArray();
        console.log(array);
        var data = {};
        var idp = '';
        var cost = '';
        var boolNull = false;
        for(var i=0; i < array.length; i++){
            if(array[i].name == 'idpedido'){
                idp += array[i].value + '@';
                boolNull = true;
                //data.push(array[i].value);
            }
            else if(array[i].name == 'costo'){
                cost += array[i].value + '@';
                //boolNull = true;
                //data.push(array[i].value);
            }
            else if(array[i].name != 'hab'){
                data[array[i].name] = array[i].value;
                //data.push(array[i].value);
            }
        }
        idp = idp.substring(0, idp.length-1);
        cost = cost.substring(0, cost.length-1);
        data['idped'] = idp;
        data['costo'] = cost;
        console.log(data);
    }
    $("#odcForm").submit(function(e){
        e.preventDefault();
        var array = $(this).serializeArray();
        console.log(array);
        var data = {};
        var idp = '';
        var cost = '';
        var cc = '';
        var boolNull = false;
        for(var i=0; i < array.length; i++){
            if(array[i].name == 'idpedido'){
                idp += array[i].value + '@';
                boolNull = true;
                //data.push(array[i].value);
            }
            else if(array[i].name == 'costo'){
                cost += array[i].value + '@';
                //boolNull = true;
                //data.push(array[i].value);
            }
            else if(array[i].name == 'centroc'){
                cc += array[i].value + '@';
            }
            else if(array[i].name != 'hab'){
                data[array[i].name] = array[i].value;
                //data.push(array[i].value);
            }
        }
        data.ex_iva = '';
        $("#odcForm .checkEx").each(function(){
            if($(this).is(':checked')){
              data.ex_iva += 'on@';
            }
            else{
              data.ex_iva += 'off@';  
            }
            //console.log($(this).val());
        });
        data['prov'] = data['prov'].split('@')[0];
        data.ex_iva = data.ex_iva.substring(0, data.ex_iva.length-1);
        idp = idp.substring(0, idp.length-1);
        cost = cost.substring(0, cost.length-1);
        cc = cc.substring(0, cc.length-1);
        data['idped'] = idp;
        data['costo'] = cost;
        data['centroc'] = cc;
        console.log(data);
        if(boolNull){
            if(confirm("¿Está seguro que desea crear la OC?")){
                $.ajax({
                    type: 'POST',
                    data: data,
                    url: '/abastecimiento/newoc_ped',
                    success: function(data){
                        if(data == 'error'){
                            alert("La OCA que esta intentando crear es inválida.");
                        } else {
                            alert("La OCA fue creada exitosamente.");
                            $(".footer-hidden").html("<form method='POST' action='/plan/view_ordenpdf' target='_blank'><input type='hidden' name='idoda' value='"+data.split('@')[1]+"'></form>");
                            $(".footer-hidden form").submit();
                            $.ajax({
                                type: 'GET',
                                url: '/abastecimiento/comprobar_notificaciones/'+data.split('@')[0],
                                success: function(data){

                                    $(".notificaciones").html(data);
                                    $(".cerrarNewOC").click();
                                }
                            });
                        }
                    }
                });
            }
        }
        else{
            alert("Debe seleccionar al menos un producto de la lista");
        }
    });

    var io = io();



    io.on('notif-sol-abast', function(){
        
    });

    io.on('pend_oc_creation', function(){
        
       $.ajax({
           type: 'GET',
           url: '/abastecimiento/notif_abast',
           success: function(data){
               $(".notificaciones").html(data);
           }
       });
        
    });
   function conversor(yo){
        if($(yo).val() == 'clp'){
            $(".moneda").prop('type', 'number');
        }
        else{    
            $(".moneda").prop('type', 'float');
        }
   }


    function refreshAllCost(){
        var ex_iva = '';
        $("#send_of .ex_iva").each(function(){
            if($(this).is(':checked')){
              ex_iva += 'on@';
            }
            else{
              ex_iva += 'off@';  
            }
            //console.log($(this).val());
        });
        ex_iva = ex_iva.substring(0, ex_iva.length-1);
        console.log(ex_iva);
        var auxc = 0;
        var auxm = 0;
        var total = 0;
        var iva = 0;
        var neto = 0;
        var count = 0;
        $(".cant_compra").each(function(){
            $(this).val($(this).val().replace(',', '.'));
        });

        $(".key_money").each(function(){
            $(this).val($(this).val().replace(',', '.'));
        });
        $(".costo-total").each(function(){
            auxc = $(this).parent().children('.td-cant').children('.cant_compra').val();  
            //console.log($(this).parent().children('.td-money').children('.key_money').val().indexOf(','));
            if($(this).parent().children('.td-money').children('.key_money').val().indexOf(',') == -1){
                //auxm = $(this).parent().children('.td-money').children('.key_money').val(); 
                //if($(this).parent().children('.td-ex').children('.ex-iva').is(':checked')){
                if(ex_iva.split('@')[count] == 'on'){
                    auxm = $(this).parent().children('.td-money').children('.key_money').val(); 
                }
                else{
                    //auxm = $(this).parent().children('.td-money').children('.key_money').val()*0.81;
                    auxm = $(this).parent().children('.td-money').children('.key_money').val();
                    iva +=  $(this).parent().children('.td-money').children('.key_money').val()*auxc*0.19;
                }
            }
            else{
                //if($(this).parent().children('.td-ex').children('.ex-iva').is(':checked')){
                if(ex_iva.split('@')[count] == 'on'){
                    auxm = $(this).parent().children('.td-money').children('.key_money').val().replace(',','.'); 
                }
                else{ 
                    //auxm = $(this).parent().children('.td-money').children('.key_money').val().replace(',','.')*0.81;
                    auxm = $(this).parent().children('.td-money').children('.key_money').val().replace(',','.');
                    iva +=  $(this).parent().children('.td-money').children('.key_money').val().replace(',','.')*auxc*0.19; 
                }
            }
            //console.log(auxm);   
            $(this).html((auxm*auxc).toLocaleString());
            neto += auxm*auxc;
            count++;
        });
        total = neto + iva;
        total = total - (($(".descView").val()/100)*total);
        $(".total-neto").html("<small>Neto: "+neto.toLocaleString()+"</small>");
        $(".total-iva").html("<small>IVA: "+iva.toLocaleString()+"</small>");
        $(".total-total").html("<small>Total: "+total.toLocaleString()+"</small>");
      }

      /*$(".cant_compra").keyup(function(){
          //e.preventDefault();
          refreshAllCost();
      });

      $(".key_money").keyup(function(){
          //e.preventDefault();
          refreshAllCost();
      });*/
    
        io.on('showToastnewOF', function(num){
 
            // Get the snackbar DIV
            var x = document.getElementById("snackbar");

            // Add the "show" class to DIV
            console.log(num.newOF[0]);
            $("#snackbar").data('newid',num.newOF[0]);
            $("#snackbar").html("<i class='glyphicon glyphicon-refresh'></i> Se ha creado la OF N°"+num.newOF[0]+".");
            x.className = "show";


            // After 3 seconds, remove the show class from DIV
            setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
            $.ajax({
               type: 'GET',
               url: '/abastecimiento/notif_abast',
               success: function(data){
                   $(".notificaciones").html(data);
               }
           });

        });

        io.on('showNotifnewOF', function(input){
            console.log("renderizando notificacion");
            $.ajax({
               type: 'GET',
               url: '/abastecimiento/notif_abast',
               success: function(data){
                   $(".notificaciones").html(data);
               }
            });
        });

        function showToast(){
            alert("emit");
            io.emit('showToast', []);
            io.emit('showToastnotif', []);
        }



        function setFactuNum(yo){   
            $(".numFac").html($(yo).data('numoda'));
            $("#modalIdOda").val($(yo).data('idoda'));
            $.ajax({
                type: 'POST',
                data: {idoda: $(yo).data('idoda')},
                url: '/abastecimiento/get_table_fact',
                success: function(data){
                    if(data.isfacturable){
                        $(".table-factura").html(data.html);
                        $("#facturaModal").modal('toggle');
                    } else alert("No es posible registrar Facturas a esta OC");
                }

            });
        }
        </script>
    </html>
